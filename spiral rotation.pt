def spiral_traversal(matrix):
    if not matrix or not matrix[0]:
        return []

    result = []
    row_start, row_end = 0, len(matrix)
    column_start, column_end = 0, len(matrix[0])

    while row_start < row_end and column_start < column_end:
        # Traverse from left to right
        for column in range(column_start, column_end):
            result.append(matrix[row_start][column])
        row_start += 1

        # Traverse from top to bottom
        for row in range(row_start, row_end):
            result.append(matrix[row][column_end - 1])
        column_end -= 1

        # Traverse from right to left
        if row_start < row_end:
            for column in range(column_end - 1, column_start - 1, -1):
                result.append(matrix[row_end - 1][column])
            row_end -= 1

        # Traverse from bottom to top
        if column_start < column_end:
            for row in range(row_end - 1, row_start - 1, -1):
                result.append(matrix[row][column_start])
            column_start += 1

    return result

# Example matrix
matrix = [
    [1,  2,  3],
    [5,  6,  7],
    [9, 10, 9],
    [7,  4, 6]
]

# Call the function and print result
spiral_order = spiral_traversal(matrix)
print("Spiral Order Traversal:")
print(spiral_order)
